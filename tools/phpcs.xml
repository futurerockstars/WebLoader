<ruleset
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="./../vendor/squizlabs/php_codesniffer/phpcs.xsd">

	<!-- Show only relevant part of path -->
	<arg name="basepath" value="./.."/>

	<!-- Configure cache -->
	<arg name="cache" value="./../var/tools/PHP_CodeSniffer/cache.dat"/>

	<!-- Import coding-standard -->
	<rule ref="./../vendor/orisai/coding-standard/src/ruleset-7.4.xml"/>

	<exclude-pattern>tests/temp</exclude-pattern>

	<!-- Configure PSR-4 rule -->
	<!--
	<rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName">
		<properties>
			<property name="rootNamespaces" type="array">
				<element key="src" value="WebLoader"/>
				<element key="tests" value="WebLoader\Test"/>
			</property>
		</properties>
	</rule>
	-->

	<!-- Excluded because they are unsafe to auto-fix without tests or passing static analysis (e.g. PHPStan) -->

	<!-- Adds declare(strict_types=1) -->
	<!-- Unsafe when code is not strict types compatible -->
	<rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing">
		<exclude name="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.DeclareStrictTypesMissing"/>
	</rule>

	<!-- Adds property type based on annotation typehint -->
	<!-- Unsafe for overridden properties and properties with incorrect phpdoc type -->
	<rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint">
		<exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingNativeTypeHint"/>
	</rule>

	<!-- Adds function parameter type based on annotation typehint -->
	<!-- Unsafe for overridden third-party methods and methods with incorrect parameter phpdoc type -->
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint">
		<exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint"/>
	</rule>

	<!-- Adds function return type based on annotation typehint -->
	<!-- Unsafe for overridden third-party methods and methods with incorrect return phpdoc type -->
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint">
		<exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint"/>
	</rule>

	<!-- Replaces inline phpdoc with assert() when possible -->
	<!-- Unsafe with incorrect phpdoc types -->
	<rule ref="SlevomatCodingStandard.PHP.RequireExplicitAssertion">
		<exclude name="SlevomatCodingStandard.PHP.RequireExplicitAssertion"/>
	</rule>

	<!-- Makes anonymous closures static when $this is not used inside them -->
	<!-- May be unsafe if closure binding is used -->
	<rule ref="SlevomatCodingStandard.Functions.StaticClosure">
		<exclude name="SlevomatCodingStandard.Functions.StaticClosure"/>
	</rule>

	<rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName.NoMatchBetweenTypeNameAndFileName">
		<exclude name="SlevomatCodingStandard.Files.TypeNameMatchesFileName.NoMatchBetweenTypeNameAndFileName"/>
	</rule>

	<rule ref="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix">
		<exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix"/>
	</rule>

	<rule ref="SlevomatCodingStandard.Files.LineLength.LineTooLong">
		<exclude name="SlevomatCodingStandard.Files.LineLength.LineTooLong"/>
	</rule>

</ruleset>
